         CRIPTOGRAFIA DE SENHAS NO MYSQL
Alguns dos recursos voltados para a criptografia de dados existentes no MySQL.

LEIA ATÉ O FINAL

_______________________________________________________
            MD5

Esse processo, no entanto, é unidirecional -- uma vez aplicada, essa função criptográfica não pode ser revertida a fim de recuperar o valor original.

EXECUTADO>   INSERT INTO customer(name, email, password, idAddress) VALUES
	            ('pamela cássia', 'pamelacassia@gmail.com', MD5('Pamdantas'), 11);

              INSERT INTO customer(name, email, password, idAddress) VALUES
	            ('henrique', 'henrique2@gmail.com', MD5(12345), 11);

Agora o campo de senha tem um texto do qual não se pode extrair o conteúdo original.
MAS
Ele reconhece o que o campo é. 
Por exemplo, fazendo essa consulta buscando pela senha em si, mesmo que ela esteja criptografada no banco, dá pra entender.

EXECUTE>       SELECT * FROM customer WHERE password IN (MD5('Pamdantas'), MD5('12345'));


¨¨¨¨QUERYS NO CÓDIGO¨¨¨¨
query = "INSERT INTO customer (name, email, password, idAddress)" +
                " VALUES (@name, @email, MD5(@password), @idAddress)";

funciona no database: exemplo de insert ali em 'EXECUTADO>'       
            
query = "SELECT idCustomer, name, email FROM customer " +
               "WHERE email = @login AND password = MD5(@password)";

funciona no database:            
            SELECT idCustomer, name, email FROM customer  
                         #adicione a coluna de password também para ver a senha em hash e como ele identifica a normal e a de hash
            WHERE email = 'pamelacassia@gmail.com' AND password = MD5('Pamdantas');
       
RODE AMBOS COMANDOS DE INSERT E SELECT PARA CONFIRMAR ;)
            

*Strings só são aceitas com '', e números tbm são aceitos com '', então é melhor padronizar sempre com nos inserts de senha




_______________________________________________________
AES_ENCRYPT
Criptografa o dado com algoritmos simétricos (AES) que só pode ser descriptografada se a chave informada para recuperar o dado for igual a chave utilizada para criptografar.
Este comando possui a seguinte sintaxe:

            AES_ENCRYPT('texto a ser criptografado', 'chave criptográfica')

Exemplo:
            INSERT INTO usuarios(login, senha) VALUES ('meuusuario', AES_ENCRYPT('minha_senha123*', 'ASKASKSDJVS106DVSDJAHDLDSDFSBGXHG');



_______________________________________________________
AES_DECRYPT
Sua função é descriptografar a sequência que foi criptografada com o comando AES_ENCRYPT.
A sintaxe do comando é esta:
    
            AES_DECRYPT('dado a ser descriptografado', 'chave criptográfica')

Exemplo:
Para recuperar a senha do usuário ‘meuusuario’ podemos utilizar a seguinte consulta:

            SELECT AES_DECRYPT(senha, 'ASKASKSDJVS106DVSDJAHDLDSDFSBGXHG') FROM usuarios WHERE login = 'meuusuario'



_______________________________________________________
PASSWORD
** NÃO PASSADO NOS TESTE **
Esta função não é bem uma criptografia, ela na verdade embaralha os valores e até o presente momento não é possível recuperar o valor original da string.


Sua sintaxe é:
            PASSWORD('string a ser embaralhada')


Exemplo:
            INSERT INTO usuarios(login, senha) VALUES('mynewuser', PASSWORD('mypassword'));

Para recuperar a mesma é só por comparações (tentativa/erro):
            SELECT * FROM usuarios WHERE login = 'mynewuser' AND senha = PASSWORD('mypassord');


_______________________________________________________
OPNIÕES:
            Entre o Password e o MD5, é preferível usar o MD5.
            E o AES pelo visto tem que sempre escolher uma chave criptográfica, então também não é viável.
           
            Podemos trabalhar com o MD5 mesmo que consiguiremos buscar a senha do usuário na query e ela vai trazer o hash da senha, fazendo assim a validação!
